# coding: utf-8

"""
    Resources and endpoints

    When I started SignWell in 2019, I saw there was a need for an alternative to the hard-to-use and expensive e-signature software already out there. Documents can be complicated enough, but getting a document signed shouldn't be complicated too.  At SignWell, we pride ourselves not only on the ease and affordability of our e-signature process but also on our personalized and industry-leading customer support — whether it's for individual use or larger team accounts, SignWell is here to help you feel comfortable and confident getting your documents signed.  The SignWell mission? Simplify how documents get signed for millions of people and businesses. We're excited to help you continue to move toward the future of paperless document signing.  Ruben Gamez Founder, SignWell

    The version of the OpenAPI document: 1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class TemplateRecipientsMapItem(BaseModel):
    # A unique identifier that you will give to each recipient. We recommend numbering sequentially from 1 to X. IDs are required for associating recipients to fields and more.
    id: str = Field(alias='id')

    # Email address for the recipient.
    email: str = Field(alias='email')

    # Name of the recipient.
    name: typing.Optional[str] = Field(None, alias='name')

    # The name of the placeholder you want this recipient assigned to.
    placeholder_name: typing.Optional[str] = Field(None, alias='placeholder_name')

    # If set, signers assigned with a passcode will be required to enter the passcode before they’re able to view and complete the document.
    passcode: typing.Optional[str] = Field(None, alias='passcode')

    # Email subject for the signature request that the recipient will see. Overrides the general subject for the template.
    subject: typing.Optional[str] = Field(None, alias='subject')

    # Email message for the signature request that the recipient will see. Overrides the general message for the template.
    message: typing.Optional[str] = Field(None, alias='message')

    # Applies on when `embedded_signing` is `true`. By default, recipients are not notified through email to sign when doing embedded signing. Setting this to `true`  will send a notification email to the recipient. Default is `false`.
    send_email: typing.Optional[bool] = Field(None, alias='send_email')

    # If `send_email` is `true` recipients will receive a new document notification immediately. In the case of embedded signing, you can delay this notification to only send if the document is not completed within a few minutes. The email notification will not go out if the document is completed before the delay time is over. Valid values are in minutes ranging from `0` to `60`. Defaults to `0`.
    send_email_delay: typing.Optional[int] = Field(None, alias='send_email_delay')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
