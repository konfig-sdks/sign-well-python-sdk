# coding: utf-8

"""
    Resources and endpoints

    When I started SignWell in 2019, I saw there was a need for an alternative to the hard-to-use and expensive e-signature software already out there. Documents can be complicated enough, but getting a document signed shouldn't be complicated too.  At SignWell, we pride ourselves not only on the ease and affordability of our e-signature process but also on our personalized and industry-leading customer support â€” whether it's for individual use or larger team accounts, SignWell is here to help you feel comfortable and confident getting your documents signed.  The SignWell mission? Simplify how documents get signed for millions of people and businesses. We're excited to help you continue to move toward the future of paperless document signing.  Ruben Gamez Founder, SignWell

    The version of the OpenAPI document: 1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from sign_well_python_sdk import schemas  # noqa: F401


class DocumentTemplateResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "id",
        }
        
        class properties:
            id = schemas.StrSchema
            api_application_id = schemas.UUIDSchema
            requester_email_address = schemas.StrSchema
            custom_requester_name = schemas.StrSchema
            custom_requester_email = schemas.StrSchema
            name = schemas.StrSchema
            subject = schemas.StrSchema
            message = schemas.StrSchema
            metadata = schemas.DictSchema
            created_at = schemas.DateTimeSchema
            updated_at = schemas.DateTimeSchema
        
            @staticmethod
            def placeholders() -> typing.Type['DocumentTemplateResponsePlaceholders']:
                return DocumentTemplateResponsePlaceholders
        
            @staticmethod
            def copied_placeholders() -> typing.Type['DocumentTemplateResponseCopiedPlaceholders']:
                return DocumentTemplateResponseCopiedPlaceholders
            status = schemas.StrSchema
            reminders = schemas.BoolSchema
            archived = schemas.BoolSchema
            template_link = schemas.StrSchema
            apply_signing_order = schemas.BoolSchema
            redirect_url = schemas.StrSchema
            decline_redirect_url = schemas.StrSchema
            expires_in = schemas.IntSchema
        
            @staticmethod
            def files() -> typing.Type['DocumentTemplateResponseFiles']:
                return DocumentTemplateResponseFiles
        
            @staticmethod
            def fields() -> typing.Type['DocumentTemplateResponseFields']:
                return DocumentTemplateResponseFields
            allow_decline = schemas.BoolSchema
            allow_reassign = schemas.BoolSchema
            __annotations__ = {
                "id": id,
                "api_application_id": api_application_id,
                "requester_email_address": requester_email_address,
                "custom_requester_name": custom_requester_name,
                "custom_requester_email": custom_requester_email,
                "name": name,
                "subject": subject,
                "message": message,
                "metadata": metadata,
                "created_at": created_at,
                "updated_at": updated_at,
                "placeholders": placeholders,
                "copied_placeholders": copied_placeholders,
                "status": status,
                "reminders": reminders,
                "archived": archived,
                "template_link": template_link,
                "apply_signing_order": apply_signing_order,
                "redirect_url": redirect_url,
                "decline_redirect_url": decline_redirect_url,
                "expires_in": expires_in,
                "files": files,
                "fields": fields,
                "allow_decline": allow_decline,
                "allow_reassign": allow_reassign,
            }
    
    id: MetaOapg.properties.id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["api_application_id"]) -> MetaOapg.properties.api_application_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["requester_email_address"]) -> MetaOapg.properties.requester_email_address: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_requester_name"]) -> MetaOapg.properties.custom_requester_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_requester_email"]) -> MetaOapg.properties.custom_requester_email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subject"]) -> MetaOapg.properties.subject: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["message"]) -> MetaOapg.properties.message: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["metadata"]) -> MetaOapg.properties.metadata: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_at"]) -> MetaOapg.properties.created_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updated_at"]) -> MetaOapg.properties.updated_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["placeholders"]) -> 'DocumentTemplateResponsePlaceholders': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["copied_placeholders"]) -> 'DocumentTemplateResponseCopiedPlaceholders': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reminders"]) -> MetaOapg.properties.reminders: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["archived"]) -> MetaOapg.properties.archived: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["template_link"]) -> MetaOapg.properties.template_link: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["apply_signing_order"]) -> MetaOapg.properties.apply_signing_order: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["redirect_url"]) -> MetaOapg.properties.redirect_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["decline_redirect_url"]) -> MetaOapg.properties.decline_redirect_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expires_in"]) -> MetaOapg.properties.expires_in: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["files"]) -> 'DocumentTemplateResponseFiles': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fields"]) -> 'DocumentTemplateResponseFields': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allow_decline"]) -> MetaOapg.properties.allow_decline: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allow_reassign"]) -> MetaOapg.properties.allow_reassign: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "api_application_id", "requester_email_address", "custom_requester_name", "custom_requester_email", "name", "subject", "message", "metadata", "created_at", "updated_at", "placeholders", "copied_placeholders", "status", "reminders", "archived", "template_link", "apply_signing_order", "redirect_url", "decline_redirect_url", "expires_in", "files", "fields", "allow_decline", "allow_reassign", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["api_application_id"]) -> typing.Union[MetaOapg.properties.api_application_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["requester_email_address"]) -> typing.Union[MetaOapg.properties.requester_email_address, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_requester_name"]) -> typing.Union[MetaOapg.properties.custom_requester_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_requester_email"]) -> typing.Union[MetaOapg.properties.custom_requester_email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subject"]) -> typing.Union[MetaOapg.properties.subject, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["message"]) -> typing.Union[MetaOapg.properties.message, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["metadata"]) -> typing.Union[MetaOapg.properties.metadata, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_at"]) -> typing.Union[MetaOapg.properties.created_at, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updated_at"]) -> typing.Union[MetaOapg.properties.updated_at, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["placeholders"]) -> typing.Union['DocumentTemplateResponsePlaceholders', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["copied_placeholders"]) -> typing.Union['DocumentTemplateResponseCopiedPlaceholders', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reminders"]) -> typing.Union[MetaOapg.properties.reminders, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["archived"]) -> typing.Union[MetaOapg.properties.archived, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["template_link"]) -> typing.Union[MetaOapg.properties.template_link, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["apply_signing_order"]) -> typing.Union[MetaOapg.properties.apply_signing_order, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["redirect_url"]) -> typing.Union[MetaOapg.properties.redirect_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["decline_redirect_url"]) -> typing.Union[MetaOapg.properties.decline_redirect_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expires_in"]) -> typing.Union[MetaOapg.properties.expires_in, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["files"]) -> typing.Union['DocumentTemplateResponseFiles', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fields"]) -> typing.Union['DocumentTemplateResponseFields', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allow_decline"]) -> typing.Union[MetaOapg.properties.allow_decline, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allow_reassign"]) -> typing.Union[MetaOapg.properties.allow_reassign, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "api_application_id", "requester_email_address", "custom_requester_name", "custom_requester_email", "name", "subject", "message", "metadata", "created_at", "updated_at", "placeholders", "copied_placeholders", "status", "reminders", "archived", "template_link", "apply_signing_order", "redirect_url", "decline_redirect_url", "expires_in", "files", "fields", "allow_decline", "allow_reassign", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        api_application_id: typing.Union[MetaOapg.properties.api_application_id, str, uuid.UUID, schemas.Unset] = schemas.unset,
        requester_email_address: typing.Union[MetaOapg.properties.requester_email_address, str, schemas.Unset] = schemas.unset,
        custom_requester_name: typing.Union[MetaOapg.properties.custom_requester_name, str, schemas.Unset] = schemas.unset,
        custom_requester_email: typing.Union[MetaOapg.properties.custom_requester_email, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        subject: typing.Union[MetaOapg.properties.subject, str, schemas.Unset] = schemas.unset,
        message: typing.Union[MetaOapg.properties.message, str, schemas.Unset] = schemas.unset,
        metadata: typing.Union[MetaOapg.properties.metadata, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        created_at: typing.Union[MetaOapg.properties.created_at, str, datetime, schemas.Unset] = schemas.unset,
        updated_at: typing.Union[MetaOapg.properties.updated_at, str, datetime, schemas.Unset] = schemas.unset,
        placeholders: typing.Union['DocumentTemplateResponsePlaceholders', schemas.Unset] = schemas.unset,
        copied_placeholders: typing.Union['DocumentTemplateResponseCopiedPlaceholders', schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        reminders: typing.Union[MetaOapg.properties.reminders, bool, schemas.Unset] = schemas.unset,
        archived: typing.Union[MetaOapg.properties.archived, bool, schemas.Unset] = schemas.unset,
        template_link: typing.Union[MetaOapg.properties.template_link, str, schemas.Unset] = schemas.unset,
        apply_signing_order: typing.Union[MetaOapg.properties.apply_signing_order, bool, schemas.Unset] = schemas.unset,
        redirect_url: typing.Union[MetaOapg.properties.redirect_url, str, schemas.Unset] = schemas.unset,
        decline_redirect_url: typing.Union[MetaOapg.properties.decline_redirect_url, str, schemas.Unset] = schemas.unset,
        expires_in: typing.Union[MetaOapg.properties.expires_in, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        files: typing.Union['DocumentTemplateResponseFiles', schemas.Unset] = schemas.unset,
        fields: typing.Union['DocumentTemplateResponseFields', schemas.Unset] = schemas.unset,
        allow_decline: typing.Union[MetaOapg.properties.allow_decline, bool, schemas.Unset] = schemas.unset,
        allow_reassign: typing.Union[MetaOapg.properties.allow_reassign, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DocumentTemplateResponse':
        return super().__new__(
            cls,
            *args,
            id=id,
            api_application_id=api_application_id,
            requester_email_address=requester_email_address,
            custom_requester_name=custom_requester_name,
            custom_requester_email=custom_requester_email,
            name=name,
            subject=subject,
            message=message,
            metadata=metadata,
            created_at=created_at,
            updated_at=updated_at,
            placeholders=placeholders,
            copied_placeholders=copied_placeholders,
            status=status,
            reminders=reminders,
            archived=archived,
            template_link=template_link,
            apply_signing_order=apply_signing_order,
            redirect_url=redirect_url,
            decline_redirect_url=decline_redirect_url,
            expires_in=expires_in,
            files=files,
            fields=fields,
            allow_decline=allow_decline,
            allow_reassign=allow_reassign,
            _configuration=_configuration,
            **kwargs,
        )

from sign_well_python_sdk.model.document_template_response_copied_placeholders import DocumentTemplateResponseCopiedPlaceholders
from sign_well_python_sdk.model.document_template_response_fields import DocumentTemplateResponseFields
from sign_well_python_sdk.model.document_template_response_files import DocumentTemplateResponseFiles
from sign_well_python_sdk.model.document_template_response_placeholders import DocumentTemplateResponsePlaceholders
